{
  "name": "展示 GitHub Pages 怎么用",
  "tagline": "很简单的~",
  "body": "# gh-pages-demo\r\n\r\nDemonstrate how to use GitHub Pages\r\n\r\n说说怎么用 GitHub 的 Pages 服务。\r\n\r\n如下图，首先，新建一个 repo。\r\n\r\n![](01.png)\r\n\r\n![](02.png)\r\n\r\n输入 repo 的名称，描述，【一定】要勾选生成 README 这个选项，不然你不懂命令行使用 `git` 就傻了。\r\n然后点击 `Create repository`。\r\n\r\n![](03.png)\r\n\r\n然后就可以看到 repo 生成好了。里面有一个 README.md 文件。\r\n要生成 GitHub Pages，最简单的方式就是用官方的 generator。\r\n先点击 `Settings`，如下图。\r\n\r\n![](04.png)\r\n\r\n然后 `Launch automatic page generator`。\r\n\r\n![](05.png)\r\n\r\n在这个页面编辑这个 repo 的主页，首先设置 Project Name，其实是 Tagline，\r\n然后下面有默认生成的 GitHub Pages 指导说明，你把这些文字改成自己的，就可以了。\r\n这里用的是 Markdown 语法。当然你也可以用上面提供的富文档编辑按钮。\r\n\r\n![](06.png)\r\n\r\n然后点击下方的按钮，就到了下面的界面。这是 GitHub Pages 提供的模板。你可以从里面选择\r\n自己喜欢的风格。\r\n\r\n![](07.png)\r\n\r\n比如这是 Time Machine 风格。\r\n\r\n![](08.png)\r\n\r\n我喜欢 Minimal 风格，所以选了它。选完后点击 `publish page`，主页就生成好了。\r\nGitHub 会把你带回到 repo 主界面，并提示你主页生成好了，地址在 blah blah，如下图：\r\n\r\n![](09.png)\r\n\r\n先不急去那个主页，看看 repo 下面多了什么？一个新的 Branch，叫 `gh-pages`，点击它。\r\n\r\n![](10.png)\r\n\r\n发现下面有一个 `index.html`，一个 `params.json`，还有两个文件夹。这就是网页的所有源码。\r\n`index.html` 是主页，`params.json` 包含了你主页的 Markdown 内容，以及你的标题，Tagline 信息，等等。\r\n\r\n![](11.png)\r\n\r\n然后去自己的 repo 展示主页看看把，如果你的 repo 叫 `some-repo`，你的用户名叫 `some-user`，那你的\r\nrepo 的 GitHub Pages 主页就是 `<some-user>.github.io/some-repo`。如下图。\r\n\r\n![](12.png)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}